{"ast":null,"code":"export default {\n  name: 'ResetPasswordForm',\n  data() {\n    return {\n      resetCode: '',\n      newPassword: '',\n      confirmPassword: '',\n      currentYear: new Date().getFullYear() // Initialize currentYear with the current year\n    };\n  },\n  methods: {\n    resetPassword() {\n      // Implement your logic to validate reset code and set new password\n      console.log('Reset code:', this.resetCode);\n      console.log('New Password:', this.newPassword);\n      console.log('Confirm Password:', this.confirmPassword);\n\n      // Simulate success message\n      alert('Password reset successful. Please login with your new password.');\n\n      // Redirect to login page\n      window.location.href = '/login';\n    },\n    updateCurrentYear() {\n      this.currentYear = new Date().getFullYear();\n    },\n    created() {\n      // Update currentYear when the component is created\n      this.updateCurrentYear();\n    }\n  }\n};","map":{"version":3,"names":["name","data","resetCode","newPassword","confirmPassword","currentYear","Date","getFullYear","methods","resetPassword","console","log","alert","window","location","href","updateCurrentYear","created"],"sources":["C:\\laragon\\vue\\vue-authentication\\src\\pages\\ResetPassword.vue"],"sourcesContent":["<template>\r\n    <div class=\"container\">\r\n      <div class=\"row justify-content-center mt-5\">\r\n        <div class=\"col-md-6\">\r\n          <div class=\"card shadow\">\r\n            <div class=\"card-body\">\r\n              <h3 class=\"card-title text-center mb-4\">Reset Password</h3>\r\n              <form @submit.prevent=\"resetPassword\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"resetCode\">Reset Code</label>\r\n                  <input type=\"text\" class=\"form-control\" v-model=\"resetCode\" placeholder=\"Enter reset code\">\r\n                </div>\r\n                <div class=\"form-group\">\r\n                  <label for=\"newPassword\">New Password</label>\r\n                  <input type=\"password\" class=\"form-control\" v-model=\"newPassword\" placeholder=\"Enter new password\">\r\n                </div>\r\n                <div class=\"form-group\">\r\n                  <label for=\"confirmPassword\">Confirm Password</label>\r\n                  <input type=\"password\" class=\"form-control\" v-model=\"confirmPassword\" placeholder=\"Confirm new password\">\r\n                </div>\r\n                <div class=\"text-center\">\r\n                  <button type=\"submit\" class=\"btn btn-primary btn-block\">Reset</button>\r\n                </div>\r\n              </form>\r\n              <div class=\"text-center mt-5\">\r\n              <p>&copy; {{ currentYear }} Graham Moguche. All rights reserved.</p>\r\n            </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    name: 'ResetPasswordForm',\r\n    data() {\r\n      return {\r\n        resetCode: '',\r\n        newPassword: '',\r\n        confirmPassword: '',\r\n        currentYear: new Date().getFullYear() // Initialize currentYear with the current year\r\n      };\r\n    },\r\n    methods: {\r\n      resetPassword() {\r\n        // Implement your logic to validate reset code and set new password\r\n        console.log('Reset code:', this.resetCode);\r\n        console.log('New Password:', this.newPassword);\r\n        console.log('Confirm Password:', this.confirmPassword);\r\n        \r\n        // Simulate success message\r\n        alert('Password reset successful. Please login with your new password.');\r\n  \r\n        // Redirect to login page\r\n        window.location.href = '/login';\r\n      },\r\n      updateCurrentYear() {\r\n      this.currentYear = new Date().getFullYear();\r\n    },\r\n    created() {\r\n    // Update currentYear when the component is created\r\n    this.updateCurrentYear();\r\n  }\r\n    }\r\n  };\r\n  </script>\r\n  "],"mappings":"AAmCE,eAAe;EACbA,IAAI,EAAE,mBAAmB;EACzBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE,EAAE;MACbC,WAAW,EAAE,EAAE;MACfC,eAAe,EAAE,EAAE;MACnBC,WAAW,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,EAAE;IACxC,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,aAAaA,CAAA,EAAG;MACd;MACAC,OAAO,CAACC,GAAG,CAAC,aAAa,EAAE,IAAI,CAACT,SAAS,CAAC;MAC1CQ,OAAO,CAACC,GAAG,CAAC,eAAe,EAAE,IAAI,CAACR,WAAW,CAAC;MAC9CO,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAE,IAAI,CAACP,eAAe,CAAC;;MAEtD;MACAQ,KAAK,CAAC,iEAAiE,CAAC;;MAExE;MACAC,MAAM,CAACC,QAAQ,CAACC,IAAG,GAAI,QAAQ;IACjC,CAAC;IACDC,iBAAiBA,CAAA,EAAG;MACpB,IAAI,CAACX,WAAU,GAAI,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;IAC7C,CAAC;IACDU,OAAOA,CAAA,EAAG;MACV;MACA,IAAI,CAACD,iBAAiB,CAAC,CAAC;IAC1B;EACE;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}